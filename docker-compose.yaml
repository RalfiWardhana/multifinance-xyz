# docker-compose.yml
version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: xyz_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: pt_xyz_multifinance
      MYSQL_USER: xyz_user
      MYSQL_PASSWORD: xyz_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations/001_initial_schema.sql:/docker-entrypoint-initdb.d/001_initial_schema.sql
    networks:
      - xyz_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Application
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: xyz_app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: xyz_user
      DB_PASSWORD: xyz_password
      DB_NAME: pt_xyz_multifinance
      SERVER_PORT: 8080
      JWT_SECRET: cghjyads896yVHuJnK567
      GIN_MODE: release
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/root/uploads
    networks:
      - xyz_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: xyz_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - xyz_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: xyz_nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - xyz_network

volumes:
  mysql_data:

networks:
  xyz_network:
    driver: bridge